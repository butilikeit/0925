### 문제풀이 핵심아이디어 또는 새롭게 알게된 내용: 

    
### 코드의 시간복잡도와 그 이유:
    O(N) : 주어진 빙고판의 숫자를 일일히 확인하는 시간

### 코드:
```python
matrix = []
compare = []
for i in range(5):
    row = input().split()
    row = [int(x) for x in row]
    matrix.append(row)
    compare.extend(row)

answer = []
for i in range(5):
    row = input().split()
    row = [int(x) for x in row]
    answer.extend(row)

bingo = 0
call_count = 0

# 빙고 판에서 해당 숫자를 0으로 변경하는 함수
def mark_number(number):
    for row in matrix:
        if number in row:
            row[row.index(number)] = 0

def check_bingo():
    bingo_count = 0
    for k in range(0, 5):
        if (
            (matrix[k][0] == 0 and matrix[k][1] == 0 and matrix[k][2] == 0 and matrix[k][3] == 0 and matrix[k][4] == 0)
            or (matrix[0][k] == 0 and matrix[1][k] == 0 and matrix[2][k] == 0 and matrix[3][k] == 0 and matrix[4][k] == 0)
            or (matrix[4][0] == 0 and matrix[3][1] == 0 and matrix[2][2] == 0 and matrix[1][3] == 0 and matrix[0][4] == 0)
            or (matrix[0][0] == 0 and matrix[1][1] == 0 and matrix[2][2] == 0 and matrix[3][3] == 0 and matrix[4][4] == 0)
        ):
            bingo_count += 1
    return bingo_count

for number in answer:
    call_count += 1
    mark_number(number)
    bingo = check_bingo()
    if bingo >= 3:
        print(call_count)
        break

```
